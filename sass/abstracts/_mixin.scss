@use 'variables';

// Mixin  Header

@mixin header($grid-template-rows: 63px, $grid-template-columns: null){
    display: grid;
    grid-template-rows: $grid-template-rows;
    grid-template-columns: $grid-template-columns;
    box-shadow: variables.$box-shadow1;
    align-items: center;
    @include breakpoint(large) {
        grid-template-rows: 96px;
    }
}

// Mixin Button

@mixin button($width: null, $height: null){
    display: grid;
    width: $width;
    height: $height;
    margin: 0 auto;
    border-radius: 25px;
    box-shadow: variables.$box-shadow_button;
    background-image: variables.$background-gradient;
    align-items: center;
    justify-content: center;   
    &:hover{
    opacity: 0.8;
    color: variables.$background-color-first;
    } 
}

// Animation Loader

@mixin animation_loader{
    animation-name: loader;
    animation-duration: 0.1s;
    animation-delay: 5s;
    animation-fill-mode: forwards;
        
    @keyframes loader{
        to{
            visibility: hidden;
        }    
    }
}

@mixin animation_loader_text{
    animation-name: loader_text_visible;
    animation-duration: 5s;
    animation-timing-function: linear;
        
    @keyframes loader_text_visible{
        0%{
            width: 0;
            grid-row-start: 1;
            grid-column-end: 2;          
        }            
        100%{
            width: 100%;
            grid-row-start: 1;
            grid-column-end: 2; 
        }        
    }
}

// Animation Heart 

@mixin animation_heart($animation_heart: true){
    font-weight: 1000;
    background-image: variables.$background-gradient;
    background-clip: text;
    transition: all 1s ease-in-out;
    -webkit-text-fill-color: transparent;
}

// Animation Menu 

@mixin animation_menu ($animation_menu: true){
    @if $animation_menu{
        .menu__text{                      
            animation-name: menu__text;
            animation-duration: 1s; 
            animation-fill-mode: forwards;     
        }
        .menu__selected{
            animation-name: menu__selected;
            animation-duration: 1s;
            animation-fill-mode: forwards;     
        }  
        .menu__price{         
            animation-name: menu__price;
            animation-duration: 1s; 
            animation-fill-mode: forwards;                           
        }
    }

    @keyframes menu__text{
        0%{width: 60%}    
        100%{width: 60%}
    }

    @keyframes menu__selected{
        0%{opacity: 1 ; right: -62.62px}    
        100%{opacity: 1; right: 0}
    }
    
    @keyframes menu__price{
        0%{right: 15px}    
        100%{right: 62.62px}
    }   
}

// Breakpoints

@mixin breakpoint($bp){
    @if $bp == medium{
        @media screen and (min-width: variables.$bp-M){
            @content;
        }
    }
    @else if $bp == large{
        @media screen and (min-width: variables.$bp-L){
            @content;
        }
    }
    @else{
        @error "L'argument $bp ne peut valoir que medium ou large";
    }
}